@{
    ViewBag.Title = "Taxi Cab Service";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/visualization")
@Scripts.Render("~/bundles/leaflet-draw")


<div id="map" style="width: 800px; height: 600px; border: 1px solid #ccc"></div>
<button id="changeColor">Rectangle -> Blue</button>




<script>
    var osmUrl = 'https://{s}.tiles.mapbox.com/v3/examples.map-zr0njcqy/{z}/{x}/{y}.png',
        osmAttrib = '<a href="http://www.mapbox.com/about/maps/" target="_blank">Terms &amp; Feedback</a>',
        osm = L.tileLayer(osmUrl, { maxZoom: 18, attribution: osmAttrib }),
        map = new L.Map('map', { layers: [osm], center: new L.LatLng(40.72332345541449, -73.99), zoom: 15 });

    var drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    // Set the title to show on the polygon button
    L.drawLocal.draw.toolbar.buttons.polygon = 'Draw a sexy polygon!';

    var drawControl = new L.Control.Draw({
        position: 'topright',
        draw: {
            polyline: {
                metric: true
            },
            polygon: {
                allowIntersection: false,
                showArea: true,
                drawError: {
                    color: '#b00b00',
                    timeout: 1000
                },
                shapeOptions: {
                    color: '#bada55'
                }
            },
            circle: {
                shapeOptions: {
                    color: '#662d91'
                }
            },
            marker: false
        },
        edit: {
            featureGroup: drawnItems,
            remove: false
        }
    });
    map.addControl(drawControl);

    map.on('draw:created', function (e) {
        var type = e.layerType,
            layer = e.layer;

        if (type === 'marker') {
            layer.bindPopup('A popup!');
        }

        if (type === 'rectangle') {
            layer.on('mouseover', function () {
                //	alert(layer.getLatLngs());

                //	var points = layer.getLatLngs();

                var points = layer.toGeoJSON();
                var test = "";

            });

        }



        drawnItems.addLayer(layer);
    });

    map.on('draw:edited', function (e) {
        var layers = e.layers;
        var countOfEditedLayers = 0;
        layers.eachLayer(function (layer) {
            countOfEditedLayers++;
        });
        console.log("Edited " + countOfEditedLayers + " layers");
    });

    L.DomUtil.get('changeColor').onclick = function () {
        drawControl.setDrawingOptions({ rectangle: { shapeOptions: { color: '#004a80' } } });
    };

</script>

<button id="test">Test Here!</button>
<script type="text/javascript">
    function TestConnection() {
        //test that the method can be called
        var listOfPoints = [
            {"Latitude": 40.75, "Longitude": -73.993 },
            {"Latitude": 40.752, "Longitude": -73.993 },
            {"Latitude": 40.752, "Longitude": -73.995 },
            {"Latitude": 40.75, "Longitude": -73.995 },
            {"Latitude": 40.75, "Longitude": -73.993 }
        ];
        var startDateArg = new Date(2013, 10, 02);
        var endDateArg = new Date(213, 10, 09);

        $.ajax({
            type: "POST",
            url: "RegionQuery",
            data: {
                startDateString: startDateArg.toString(),
                endDateString: endDateArg.toString(),
                boundPoints: listOfPoints
            },
            success: function (response) {
                window.alert(response);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                window.alert(xhr.responseText)
            }
        });
    }

    $("#test").click(function () {
        TestConnection();
    });
</script>